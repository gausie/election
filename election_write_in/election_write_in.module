<?php
/**
 * @file
 * Main module file for Election Write-In Candidates.
 */

/**
 * Check whether an election supports write-in candidates.
 */
function election_write_in_check_support($election) {
  if (!election_candidate_check_support($election)) {
    return FALSE;
  }
  return (!empty($election->type_info['write-in candidates']));
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add write-in candidate settings to the election post edit form.
 */
function election_write_in_form_election_post_form_alter(&$form, &$form_state) {
  $post = $form_state['post'];
  $election = $form_state['election'];
  if (!election_write_in_check_support($election)) {
    return;
  }

  $form['candidates_nominations']['settings_write_in'] = array(
    '#type' => 'checkbox',
    '#title' => t('Allow write-in candidates'),
    '#description' => t('This gives the voter an option to specify a write-in candidate at the point of voting.'),
    '#default_value' => isset($post->settings['write_in']) ? $post->settings['write_in'] : 1,
    '#weight' => 40,
  );
}

/**
 * Implements hook_default_ENTITY_ID().
 *
 * @see http://drupal.org/node/999942
 */
function election_write_in_default_election_candidate_type() {
  // Add 'write_in' as an election candidate type.
  $defaults['write_in'] = entity_create('election_candidate_type', array(
    'type' => 'write_in',
    'label' => t('Write-in candidate'),
  ));
  return $defaults;
}

/**
 * Implements hook_entity_presave().
 */
function election_write_in_entity_presave($entity, $type) {
  if ($type == 'election_candidate' && $entity->type == 'write_in') {
    // The write-in candidate UID starts off as user 1, so that the candidate
    // can only be edited by administrators, and there is no association
    // between the user and the candidate (for anonymity).
    $entity->uid = 1;
    // Write-in candidates are never published.
    $entity->published = 0;
  }
}

/**
 * Get a new write-in candidate object, for a given post.
 */
function election_write_in_get_new($post) {
  $candidate = entity_get_controller('election_candidate')->create(array(
    'type' => 'write_in',
    'election_id' => $post->election->election_id,
    'post_id' => $post->post_id,
    'is_new' => TRUE,
  ));
  return $candidate;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function election_write_in_form_election_vote_form_alter(&$form, &$form_state) {
  if (isset($form_state['vote_require_confirm']) || isset($form_state['abstain_require_confirm'])) {
    return;
  }

  $post = $form_state['post'];
  $election = $post->election;

  if (election_write_in_check_support($election) && !empty($post->settings['write_in'])) {
    $form['write_in_wrapper'] = array(
      '#type' => 'fieldset',
      '#title' => t('Write-in candidate'),
    );
    $form['write_in_wrapper']['write_in_enable'] = array(
      '#type' => 'checkbox',
      '#title' => t('Vote for a write-in candidate'),
    );
    $write_in_enabled_state = array(
      ':input[name="write_in_enable"]' => array('checked' => TRUE),
    );
    $write_in_states = array(
      'visible' => $write_in_enabled_state,
      'required' => $write_in_enabled_state,
    );
    $form['write_in_wrapper']['write_in'] = array(
      '#type' => 'container',
      '#tree' => TRUE,
      '#element_validate' => array('_election_write_in_element_validate'),
    );
    $form['write_in_wrapper']['write_in']['first_name'] = array(
      '#type' => 'textfield',
      '#title' => t('First name'),
      '#states' => $write_in_states,
    );
    $form['write_in_wrapper']['write_in']['last_name'] = array(
      '#type' => 'textfield',
      '#title' => t('Last name'),
      '#states' => $write_in_states,
    );
    drupal_alter('election_write_in_elements', $form, $form_state);
  }
}

/**
 * Element validation callback for adding a write-in candidate.
 */
function _election_write_in_element_validate($element, &$form_state, $form) {
  if (!empty($form_state['values']['write_in_enable'])) {
    $post = $form_state['post'];
    $write_in_values = $form_state['values']['write_in'];
    $candidate = election_write_in_get_new($post);
    if (!empty($write_in_values['first_name'])) {
      $candidate->first_name = $write_in_values['first_name'];
    }
    if (!empty($write_in_values['last_name'])) {
      $candidate->last_name = $write_in_values['last_name'];
    }
    $form_state['write_in_candidate'] = $candidate;
  }
}
